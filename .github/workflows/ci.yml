name: online backup database
on: [push]
jobs:

  test-container:
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      mydb:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
    - name: Verify MySQL connection from container
      run: |
        apt-get update
        apt-get install -y mysql-client
        mysql --host mydb -uroot -ppassword -e "SHOW DATABASES"

  build:
    name: Build
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: db
          POSTGRES_DB: db
          POSTGRES_PASSWORD: db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      minio:
        image: minio/minio:edge
        env:
          MINIO_ACCESS_KEY: 1234567890
          MINIO_SECRET_KEY: 1234567890
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: Verify MySQL connection from container
      run: |
        apt-get update && apt-get install -y mysql-client
        mysql --host mysql -uroot -ppassword -e "SHOW DATABASES"

    - name: backup postgres
      uses: ./
      with:
        database_driver: postgres
        database_username: db
        database_password: db
        database_name: db
        database_host: postgres:5432

        storage_driver: s3
        access_key_id: 1234567890
        secret_access_key: 1234567890
        storage_endpoint: minio:9000
        storage_bucket: test
        storage_region: ap-northeast-1
        storage_path: backup
